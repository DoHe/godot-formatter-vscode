{
  "name": "godot-format",
  "displayName": "godot-format",
  "description": "A formatter for Godot/GDScript using GDQuest's gdscript formatter",
  "version": "0.2.2",
  "engines": {
    "vscode": "^1.104.0"
  },
  "license": "MIT",
  "publisher": "DoHe",
  "categories": [
    "Formatters"
  ],
  "galleryBanner": {
    "color": "#478cbf",
    "theme": "dark"
  },
  "activationEvents": [
    "onLanguage:gdscript"
  ],
  "main": "./dist/extension.js",
  "icon": "icon.png",
  "keywords": [
    "godot",
    "gdscript",
    "formatter",
    "format"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/DoHe/godot-formatter-vscode"
  },
  "contributes": {
    "languages": [
      {
        "id": "gdscript",
        "aliases": [
          "GDScript"
        ],
        "extensions": [
          ".gd"
        ]
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Godot Formatter",
      "properties": {
        "godotFormatter.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable formatting with this extension"
        },
        "godotFormatter.useBuiltInBinary": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the built-in formatter binary that ships with the extension."
        },
        "godotFormatter.gdscriptFormatterPath": {
          "type": "string",
          "default": "",
          "description": "The path to the gdscript formatter executable. Leave this empty if it's in your system's PATH. If using PATH, make sure to remove the architecture/platform suffix if you copied the binary from the releases page. Only used if useBuiltInBinary is false."
        },
        "godotFormatter.useSpaces": {
          "type": "boolean",
          "default": false,
          "description": "Whether to use spaces. If disabled will use tabs."
        },
        "godotFormatter.indentSize": {
          "type": "integer",
          "default": 4,
          "description": "How many spaces to use for indentation. This is only used if `useSpaces` is enabled"
        },
        "godotFormatter.reorderCode": {
          "type": "boolean",
          "default": false,
          "description": "Whether to allow reordering code blocks, like exported variables vs constants etc. This only applies if safe mode is disabled."
        },
        "godotFormatter.safe": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable safe mode. Safe mode tries to preserve existing syntax and structure where possible and otherwise does not format the file. If this enabled, `reorderCode` is ignored. Slightly less performant."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.104.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "eslint": "^9.34.0",
    "typescript": "^5.9.2",
    "ts-loader": "^9.5.4",
    "webpack": "^5.101.3",
    "webpack-cli": "^6.0.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}
